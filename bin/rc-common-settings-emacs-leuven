# Hey Emacs, this is a -*- sh -*- file ...

if [[ -z "$SSH_CONNECTION" ]]; then
    # Configuration for local mode.

    # Set the default editor to emacsclient.
    export EDITOR="emacsclient"

    # Set an alternate editor to an empty string.
    export ALTERNATE_EDITOR=""

    # Create an alias 'e' for running emacsclient in non-blocking mode.
    alias e="emacsclient -n"

    # Open a file in an Emacs terminal frame using emacsclient.
    et() {
        emacsclient -t -a '' --eval "(find-file \"$1\")"
    }

    # Emacsclient with frame focus and file opening.
    ec() {
        emacsclient -n -r -a '' --eval "(progn
            (select-frame-set-input-focus (selected-frame))
            (find-file \"$1\")
        )"
    }

    # Open Ediff for two files.
    ediff() {
        emacsclient -n -r -a '' --eval "(progn
            (select-frame-set-input-focus (selected-frame))
            (ediff-files \"$1\" \"$2\")
        )"
    }

    # Open VC Dir for a version-controlled directory.
    evcdir() {
        emacsclient -n -r -a '' --eval "(progn
            (select-frame-set-input-focus (selected-frame))
            (vc-dir \"$1\")
        )"
    }



    alias ec0='emacsclient -n -r -a "" --eval "(progn (select-frame-set-input-focus (selected-frame)) (find-file \"\$1\"))"'


    alias ec1='emacsclient -n -e "(progn (find-file \"$1\") (select-frame-set-input-focus (selected-frame)))"'
    alias ec2="emacsclient -n -e '(select-frame-set-input-focus (selected-frame))'"
    alias ec3='emacsclient -n --eval "(progn (select-frame-set-input-focus (selected-frame)))"'
    # *ERROR*: Symbolâ€™s value as variable is void: xit.sql

    alias ec11='emacsclient -n -e "(progn (find-file "$1") (select-frame-set-input-focus (selected-frame)))"'
    # *ERROR*: Wrong number of arguments: #[(ad--addoit-function filename &optional wildcards) "\305  \306    !\203&

    # If emacsclient can't connect to an existing Emacs server, it will fall
    # back to running a new instance of Emacs.
    alias ee="emacsclient -n --alternate-editor=emacs"

    alias bgemacs='emacs &'
else
    # Configuration for remote mode.
    for candidate_editor in emacs subl atom nano; do
        if command -v "$candidate_editor" &> /dev/null; then
            # Use the first available editor.
            EDITOR="$candidate_editor"
            break
        fi
    done
    alias e="$EDITOR"                   # Alias 'e' uses the chosen editor.
fi

# Set VISUAL to the same value as EDITOR.
export VISUAL="$EDITOR"

# Cd to the directory of the current buffer in Emacs.
cde() {
    if ! command -v emacsclient > /dev/null 2>&1; then
        printf >&2 "Error: emacsclient command not found.\n"
        printf >&2 "Please install Emacsclient and ensure the binary is in your PATH.\n"
        return 2
    fi

    if ! emacsclient -e '(server-running-p)' > /dev/null 2>&1; then
        printf >&2 "Error: Emacs server is not running.\n"
        printf >&2 "Please start the Emacs server first.\n"
        return 2
    fi

    local dir
    dir="$(emacsclient -e '(with-current-buffer
                               (window-buffer (selected-window))
                             (replace-regexp-in-string "^~" (getenv "HOME")
                                default-directory))' | tr -d '"')"

    if [[ ! -d "$dir" ]]; then
        printf >&2 "Error: directory not found: %s\n" "$dir"
        return 2
    fi

    cd "$dir"
    # The change in working directory will persist after the function has
    # completed.
}
