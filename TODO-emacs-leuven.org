# Hey Emacs, this is a -*- org -*- file ...
#+TITLE:     TODO

* Tasks

** Configuration de base et personnalisation

*** TODO Optimize Emacs startup time for faster initialization
:PROPERTIES:
:header-args: :tangle no
:END:

**** Context

Identify what parts of your =.emacs= take so long.  You can do this e.g. by
starting Emacs with ~emacs -q~, set up your ~load-path~, and then evaluate

#+begin_src emacs-lisp
(benchmark-run
  (require 'some-package))
#+end_src

The first number appearing in the echo area will be the time needed to run that
command.

Use autoloads, which delay the loading of the complete package until one of the
interactive functions is used.

If you want to set options which need to be evaluated after a package is loaded,
you can use ~eval-after-load~.

With ~(eval-after-load "pkg-autoloads" ...)~, you make sure that you only run code
when the package is installed/available through ~package.el~.

**** Timings from my system

After much optimization...

  $ time emacs -f kill-emacs
  real    0m0.157s
  user    0m0.140s
  sys     0m0.012s
  $ time emacs -q -f kill-emacs
  real    0m0.137s
  user    0m0.116s
  sys     0m0.016s
  $ time emacs -Q -f kill-emacs
  real    0m0.051s
  user    0m0.028s
  sys     0m0.020s

#+begin_src shell
time emacs -f kill-emacs 2>&1
#+end_src

#+begin_src shell
time emacs -q -f kill-emacs 2>&1
#+end_src

#+begin_src shell
time emacs -Q -f kill-emacs 2>&1
#+end_src

Note that your first test is going to be dramatically slower than subsequent
tests.

#+begin_note
You can use ESUP - Emacs Start Up Profiler
#+end_note

*** TODO Suivre les tâches discutées avec Denis Bitouzé lors de sa visite à Leuven

- [ ] Renommer ~init.el~ en ~.emacs~
- [ ] Définir des variables locales
- [ ] Utiliser ~S~ pour les semi-colonnes (| awk, comme A1, T1, etc.)
- [ ] Configurer ~e~ pour lancer le serveur Emacs si Emacs n'est pas lancé

*** TODO Fixer M-u, M-SPC et M-^ (pour Marc Boyer) dans Emacs Linux

Problème pour taper ~M-^~ (il faut taper 2 x ~^~)

Tenter de modifier la configuration d'Emacs pour utiliser un autre raccourci
clavier que ~M-^~, par exemple ~M-6~.

*** TODO Avoir un git-file-history sur C-S-f ?

*** TODO Shell

e=emacsclient -n -a emacs

EDITOR

VISUAL

editor='emacsclient' (sans le -n) dans .gitconfig

** Gestion des packages

*** TODO Rajouter / retirer des packages dans Emacs-Leuven

**** Packages à retirer (plantent de Laurent Pantera)

1. auctex

   auctex n'est pas dans la liste MELPA. D'après Internet, il est dans la liste
   gnu-ELPA. J'ai donc ajouté comme tu nous as dit le dépôt gnu comme suit :

   #+begin_src emacs-lisp
   (setq package-archives
      '(("melpa" . "http://melpa.org/packages/")))
   (add-to-list 'package-archives '("gnu" . "https://elpa.gnu.org/packages/"))
   #+end_src

   Mais lorsque je fais M-x package-list-packages il ne peut pas charger le dépôt
   gnu car il y a un problème de signature (?). J'ai le message suivant :
   package--check-signature-content: Failed to verify signature:
   "archive-contents.sig"

   et donc ensuite je n'est toujours que les packages de MELPA dans la liste avec
   package-list-packages.

2. paradox

   Il est dans la liste MELPA mais il est labellisé statut=incompat et je ne
   peut pas l'installer.

3. git-commit,
   git-commit-insert-issue et
   git-timemachine
   ne sont pas dans la liste MELPA

**** Packages à rajouter

- [ ] unbound
- [ ] tidy
- [ ] info+
- [ ] hideshowvis
- [ ] bookmark+
- [ ] dired+
- [ ] dired-sort-map
- [ ] hl-tags-mode

*** TODO Install the 'format-all' package for Emacs to format code automatically

https://github.com/emacsmirror/format-all

*** TODO Understand how 'package-autoremove' determines which packages to remove in Emacs

http://emacs.stackexchange.com/questions/18253/how-does-package-autoremove-decide-which-packages-to-remove

*** MAYB Add YASnippets for snippet expansion in Emacs

- :date :: 19/05/2023
- tod :: 19/05/2023
- :now :: It's {{mytime}}
- email ::  Hey ,\n\n\n\nBest regards,\nFabrice
- ty :: Thank you for reaching out!
- tom :: Are you available tomorrow?
- meet2h :: Are you available at 11:42 PM? (= now + 2h)
- :sig1 :: All the best, Fabrice
- :br :: Best Regards,\nFabrice
- :ch :: Cheers ;)
- :log :: Could you please print the output of 'espanso log' here?
- :espanso :: Hi there!
- :sor :: I'm sorry you experienced this problem
- :ip :: {{output of curl 'https://api.ipify.org'}}
- :localip :: {{output of ip a | grep 'inet 192' | awk '{ print $2 }'}}
- :contact :: Hi,\nThank you for contacting us!\nBest regards,\nThe Support Team
- :: Thank you for your email and for bringing this to our attention
- :: I am sorry that you're disappointed with our product
- :: Could you please let me know what specific issues you've encountered?
- :: Looking forward to hearing from you
- :: All the best
- :: Espanso Support Team
- ::

See others at https://espanso.org/.

*** TODO Research and install Emacs packages for integrating an online task manager with Org mode files

There are several Emacs packages available that can integrate an online task
manager with an Org mode file. Here are a few options:

- Org-capture-Web :: This package allows you to capture tasks and notes from
  your web browser and save them to an Org mode file. It supports popular online
  task managers like *Trello*, *Asana*, and *JIRA*.
- Orgzly :: This is an *Android app* that can sync with your Org mode files and
  online task managers like *Todoist*, *Trello*, and *Google Tasks*. You can use it to
  manage your tasks on the go and then sync them back to your Emacs setup.
  - https://elis.nu/blog/2021/08/mobile-org-mode-use-with-orgzly-and-syncthing/
- Org-sync-trello :: This package lets you synchronize your *Trello* boards with
  your Org mode files. It supports bidirectional syncing, so changes made in
  either Trello or Emacs will be reflected in both places.
- Orgzit :: This is a web-based task manager that integrates with Org mode via
  a REST API. You can use it to create and manage tasks, and then sync them to
  your Org mode files using Emacs.
- org-sync-jira :: This package lets you sync your *JIRA* issues with your Org
  mode files. You can create, update, and close JIRA issues directly from Emacs,
  and changes made in either JIRA or Emacs will be synced bidirectionally.
- org-web-tools :: This package provides a collection of functions for
  interacting with web-based services, including online task managers. It
  includes functions for capturing tasks, creating links to tasks, and syncing
  tasks with Org mode files.
- org-web-tools-trello :: This package extends org-web-tools to support *Trello*
  specifically. It provides functions for capturing Trello cards as Org mode
  tasks, syncing Trello cards with Org mode files, and more.
- org-roam-server :: This package provides a web interface for browsing and
  editing your Org mode files, including tasks and notes. You can use it to
  access your Org mode files from anywhere with an internet connection, making
  it easy to integrate with online task managers.
- org-protocol-capture-html :: This package allows you to capture web pages as
  Org mode tasks, including tasks for online task managers. It works by sending
  the web page content to Emacs using the org-protocol mechanism.
- org-todoist :: This package provides an interface to the Todoist API, allowing
  you to create, update, and delete tasks in your Todoist account directly from
  Emacs.
- org-sync-todoist :: This package lets you sync your Todoist tasks with your
  Org mode files. It supports bidirectional syncing, so changes made in either
  Todoist or Emacs will be reflected in both places.

These packages offer a range of features and integrations with different online
task managers, so you may find that one or more of them is a good fit for your
needs.

** Fonctionnalités spécifiques et personnalisation avancée

*** TODO Écrire une fonction qui ajoute des demi-espaces fines pour Denis

#+begin_src emacs-lisp
(defun remplace-espace-fine-on-the-fly ()
  "Remplace les espaces avant la ponctuation par un espace fine non breaking lors de la frappe."
  (interactive)
  (when (and (boundp 'ispell-minor-mode) ispell-minor-mode
             (eq ispell-dictionary "francais")
             (not (or (eq major-mode 'latex-mode)
                      (eq major-mode 'markdown-mode)))
             (not (org-in-src-block-p)))
    (save-excursion
      (while (looking-back "\\(\\s-\\)\\([;:?!]\\)" (point-at-bol))
        (backward-delete-char 1)
        (insert (concat (match-string 1) "\u202F" (match-string 2)))))))

(add-hook 'post-self-insert-hook 'remplace-espace-fine-on-the-fly)
#+end_src

*** TODO Open file with default Windows application in Emacs

#+begin_src emacs-lisp
(defun open-file-with-default-windows-application ()
  "Open the selected file with the default Windows application."
  (interactive)
  (let ((file (dired-get-file-for-visit)))
    (message (format "Opening file: %s" file))
    (let* ((windows-path (shell-command-to-string (format "wsl.exe wslpath -w %s" file)))
           (windows-path (string-trim-right windows-path)) ; Remove trailing newline.
           (command (format "explorer.exe '%s'" windows-path)))
      (shell-command command))))

;; (eval-after-load 'dired
;;   '(define-key dired-mode-map "e" 'open-file-with-default-windows-application))

(with-eval-after-load 'dired
  (define-key dired-mode-map "e" 'open-file-with-default-windows-application))
#+end_src

TODO: Use wslview
See https://stackoverflow.com/questions/66513720/wsl2-gui-emacs-open-file-with-explorer-exe-instead-of-xdg-open

Also:

#+begin_src emacs-lisp
(defun dired-open-marked-files-with-explorer ()
  ;; dired-open-marked-files-with-explorer
  "Open marked files in Dired using Explorer on Windows."
  (interactive)
  (if-let ((marks (dired-get-marked-files)))
      (dolist (file marks)
        (shell-command (format "explorer.exe %s" (file-name-nondirectory file))))
    (user-error "No marked files; aborting")))

(with-eval-after-load 'dired
  (define-key dired-mode-map "o" 'dired-open-marked-files-with-explorer))
#+end_src

*** TODO Utiliser Orgstruct++

*** TODO Highlight source line avec C-c 3

*** TODO Add Imenu regexp support for AXVW files in Emacs

*** TODO Retirer text-only output from Gnus e-mails

pour output correct sur téléphone

*** TODO 005 - Org-html-themes

(setq  org-html-head-include-scripts t)

See issue #144

*** TODO Add 'alert' emphasis and font-lock support

#+begin_src emacs-lisp
  ;; Add 'alert' emphasis. The text enclosed by '!' will be displayed in bold
  ;; and red to indicate emphasis.
  (add-to-list 'org-emphasis-alist
               '("!" (bold :foreground "red")))
#+end_src

See [[https://list.orgmode.org/87pq02iyh7.fsf@univie.ac.at/T/][custom emphasis in org-emphasis-alist]]

** Optimisation et débogage

*** TODO [#A] Fixer les warnings (cl is deprecated)

 ■  Warning (comp): auto-highlight-symbol.el:446:2: Warning: custom-declare-variable `ahs-include' docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): auto-highlight-symbol.el:470:2: Warning: custom-declare-variable `ahs-exclude' docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): back-button.el:436:12: Warning: `inhibit-changing-match-data' is an obsolete variable (as of 29.1); use `save-match-data' instead.
 ■  Warning (comp): back-button.el:577:2: Warning: docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): back-button.el:622:2: Warning: docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): back-button.el:640:2: Warning: docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): back-button.el:676:2: Warning: docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): back-button.el:718:2: Warning: docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): bitbucket-issues.el:38:25: Warning: the function ‘perform-bitbucket-request’ is not known to be defined.
 ■  Warning (comp): circe.el:1065:16: Warning: reference to free variable ‘circe-server-buffer’
 ■  Warning (comp): circe.el:134:2: Warning: custom-declare-variable `circe-default-ip-family' docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): circe.el:2451:2: Warning: docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): circe.el:2498:38: Warning: Unused lexical argument `ignored'
 ■  Warning (comp): circe.el:2505:41: Warning: Unused lexical argument `ignored'
 ■  Warning (comp): circe.el:2520:39: Warning: Unused lexical argument `ignored'
 ■  Warning (comp): circe.el:2575:38: Warning: Unused lexical argument `ignored'
 ■  Warning (comp): circe.el:2771:36: Warning: Unused lexical argument `ignored'
 ■  Warning (comp): circe.el:2830:40: Warning: Unused lexical argument `ignored'
 ■  Warning (comp): circe.el:2865:32: Warning: reference to free variable ‘circe-netsplit-list’
 ■  Warning (comp): circe.el:2911:35: Warning: Unused lexical argument `ignored'
 ■  Warning (comp): circe.el:2939:35: Warning: Unused lexical argument `ignored'
 ■  Warning (comp): circe.el:2952:35: Warning: Unused lexical argument `ignored'
 ■  Warning (comp): circe.el:308:2: Warning: custom-declare-variable `circe-highlight-nick-type' docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): circe.el:3339:9: Warning: Variable ‘circe-netsplit-list’ declared after its first use
 ■  Warning (comp): company-quickhelp.el:245:14: Warning: `focus-out-hook' is an obsolete variable (as of 27.1); after-focus-change-function
 ■  Warning (comp): company-quickhelp.el:252:17: Warning: `focus-out-hook' is an obsolete variable (as of 27.1); after-focus-change-function
 ■  Warning (comp): dashboard-widgets.el:1082:5: Warning: docstring wider than 80 characters
 ■  Warning (comp): dashboard-widgets.el:1126:5: Warning: docstring wider than 80 characters
 ■  Warning (comp): dashboard-widgets.el:1181:5: Warning: docstring wider than 80 characters
 ■  Warning (comp): dashboard-widgets.el:1299:2: Warning: docstring wider than 80 characters
 ■  Warning (comp): dashboard-widgets.el:1485:5: Warning: docstring wider than 80 characters
 ■  Warning (comp): dashboard-widgets.el:1504:4: Warning: docstring wider than 80 characters
 ■  Warning (comp): diff-hl-inline-popup.el:55:2: Warning: docstring wider than 80 characters
 ■  Warning (comp): diff-hl-inline-popup.el:71:2: Warning: docstring wider than 80 characters
 ■  Warning (comp): diff-hl-show-hunk.el:402:2: Warning: docstring wider than 80 characters
 ■  Warning (comp): dumb-jump.el:105:2: Warning: custom-declare-variable `dumb-jump-force-searcher' docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): dumb-jump.el:130:2: Warning: custom-declare-variable `dumb-jump-ag-cmd' docstring wider than 80 characters
 ■  Warning (comp): dumb-jump.el:136:2: Warning: custom-declare-variable `dumb-jump-rg-cmd' docstring wider than 80 characters
 ■  Warning (comp): dumb-jump.el:142:2: Warning: custom-declare-variable `dumb-jump-git-grep-cmd' docstring wider than 80 characters
 ■  Warning (comp): dumb-jump.el:148:2: Warning: custom-declare-variable `dumb-jump-ag-word-boundary' docstring wider than 80 characters
 ■  Warning (comp): dumb-jump.el:154:2: Warning: custom-declare-variable `dumb-jump-rg-word-boundary' docstring wider than 80 characters
 ■  Warning (comp): dumb-jump.el:160:2: Warning: custom-declare-variable `dumb-jump-git-grep-word-boundary' docstring wider than 80 characters
 ■  Warning (comp): dumb-jump.el:166:2: Warning: custom-declare-variable `dumb-jump-grep-word-boundary' docstring wider than 80 characters
 ■  Warning (comp): dumb-jump.el:1697:2: Warning: custom-declare-variable `dumb-jump-language-contexts' docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): dumb-jump.el:172:2: Warning: custom-declare-variable `dumb-jump-fallback-regex' docstring wider than 80 characters
 ■  Warning (comp): dumb-jump.el:1742:2: Warning: custom-declare-variable `dumb-jump-project' docstring wider than 80 characters
 ■  Warning (comp): dumb-jump.el:1784:2: Warning: docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): dumb-jump.el:1829:2: Warning: docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): dumb-jump.el:1829:2: Warning: docstring wider than 80 characters
 ■  Warning (comp): dumb-jump.el:1997:2: Warning: docstring wider than 80 characters
 ■  Warning (comp): dumb-jump.el:2024:31: Warning: Use -zip-pair instead of -zip to get a list of pairs
 ■  Warning (comp): dumb-jump.el:2024:4: Warning: the function `ivy-read' is not known to be defined.
 ■  Warning (comp): dumb-jump.el:2029:2: Warning: docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): dumb-jump.el:2040:14: Warning: the function `helm-make-source' is not known to be defined.
 ■  Warning (comp): dumb-jump.el:2068:2: Warning: docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): dumb-jump.el:206:2: Warning: custom-declare-variable `dumb-jump-max-find-time' docstring wider than 80 characters
 ■  Warning (comp): dumb-jump.el:2084:2: Warning: docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): dumb-jump.el:2084:2: Warning: docstring wider than 80 characters
 ■  Warning (comp): dumb-jump.el:2107:2: Warning: docstring wider than 80 characters
 ■  Warning (comp): dumb-jump.el:2243:2: Warning: docstring wider than 80 characters
 ■  Warning (comp): dumb-jump.el:2249:2: Warning: docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): dumb-jump.el:2256:2: Warning: docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): dumb-jump.el:2275:2: Warning: docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): dumb-jump.el:2275:2: Warning: docstring wider than 80 characters
 ■  Warning (comp): dumb-jump.el:230:2: Warning: custom-declare-variable `dumb-jump-git-grep-search-untracked' docstring wider than 80 characters
 ■  Warning (comp): dumb-jump.el:2434:4: Warning: More than one doc string
 ■  Warning (comp): dumb-jump.el:2517:28: Warning: the function `tramp-file-name-localname' is not known to be defined.
 ■  Warning (comp): dumb-jump.el:2518:29: Warning: the function `tramp-dissect-file-name' is not known to be defined.
 ■  Warning (comp): dumb-jump.el:2545:2: Warning: docstring wider than 80 characters
 ■  Warning (comp): dumb-jump.el:2558:2: Warning: docstring wider than 80 characters
 ■  Warning (comp): dumb-jump.el:255:2: Warning: custom-declare-variable `dumb-jump-find-rules' docstring wider than 80 characters
 ■  Warning (comp): dumb-jump.el:2594:18: Warning: reference to free variable `find-tag-marker-ring'
 ■  Warning (comp): dumb-jump.el:2594:6: Warning: the function `ring-insert' is not known to be defined.
 ■  Warning (comp): dumb-jump.el:2721:2: Warning: docstring wider than 80 characters
 ■  Warning (comp): dumb-jump.el:2746:2: Warning: docstring wider than 80 characters
 ■  Warning (comp): dumb-jump.el:2826:2: Warning: docstring wider than 80 characters
 ■  Warning (comp): dumb-jump.el:2885:2: Warning: docstring wider than 80 characters
 ■  Warning (comp): dumb-jump.el:2889:33: Warning: the function `first' is not known to be defined.
 ■  Warning (comp): dumb-jump.el:2899:2: Warning: docstring wider than 80 characters
 ■  Warning (comp): dumb-jump.el:2943:2: Warning: docstring wider than 80 characters
 ■  Warning (comp): dumb-jump.el:2963:2: Warning: docstring wider than 80 characters
 ■  Warning (comp): dumb-jump.el:2978:2: Warning: docstring wider than 80 characters
 ■  Warning (comp): dumb-jump.el:3076:53: Warning: `point-at-bol' is an obsolete function (as of 29.1); use `line-beginning-position' or `pos-bol' instead.
 ■  Warning (comp): dumb-jump.el:3119:27: Warning: the function `xref-make' is not known to be defined.
 ■  Warning (comp): dumb-jump.el:3121:28: Warning: the function `xref-make-file-location' is not known to be defined.
 ■  Warning (comp): dumb-jump.el:65:2: Warning: custom-declare-variable `dumb-jump-window' docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): dumb-jump.el:65:2: Warning: custom-declare-variable `dumb-jump-window' docstring wider than 80 characters
 ■  Warning (comp): dumb-jump.el:72:2: Warning: custom-declare-variable `dumb-jump-use-visible-window' docstring wider than 80 characters
 ■  Warning (comp): dumb-jump.el:78:2: Warning: custom-declare-variable `dumb-jump-selector' docstring wider than 80 characters
 ■  Warning (comp): dumb-jump.el:93:2: Warning: custom-declare-variable `dumb-jump-prefer-searcher' docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): emr-elisp.el:1050:2: Warning: docstring wider than 80 characters
 ■  Warning (comp): emr-elisp.el:1191:35: Warning: Use -zip-pair instead of -zip to get a list of pairs
 ■  Warning (comp): emr-elisp.el:1516:40: Warning: the function ‘find-function-library’ is not known to be defined.
 ■  Warning (comp): emr-elisp.el:38:12: Warning: defcustom for ‘emr-el-definition-macro-names’ fails to specify type
 ■  Warning (comp): emr-elisp.el:392:2: Warning: docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): emr-elisp.el:448:2: Warning: docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): emr.el:166:20: Warning: Use -zip-pair instead of -zip to get a list of pairs
 ■  Warning (comp): emr.el:82:16: Warning: ‘point-at-eol’ is an obsolete function (as of 29.1); use ‘line-end-position’ or ‘pos-eol’ instead.
 ■  Warning (comp): epl.el:441:2: Warning: docstring wider than 80 characters
 ■  Warning (comp): expand-region-core.el:116:23: Warning: reference to free variable ‘er--show-expansion-message’
 ■  Warning (comp): expand-region-core.el:207:8: Warning: the function ‘er/set-temporary-overlay-map’ is not known to be defined.
 ■  Warning (comp): expand-region-core.el:276:11: Warning: defsubst ‘er--first-invocation’ was used before it was defined
 ■  Warning (comp): expand-region-custom.el:33:12: Warning: defcustom for ‘expand-region-preferred-python-mode’ has syntactically odd type ‘'(choice (const :tag Emacs' python.el 'python) (const :tag fgallina's python.el 'fgallina-python) (const :tag python-mode.el 'python-mode))’
 ■  Warning (comp): expand-region-custom.el:89:2: Warning: custom-declare-variable `expand-region-exclude-text-mode-expansions' docstring wider than 80 characters
 ■  Warning (comp): google-translate-core-ui.el:304:2: Warning: custom-declare-variable `google-translate-enable-ido-completion' docstring wider than 80 characters
 ■  Warning (comp): google-translate-core-ui.el:349:12: Warning: defcustom for ‘google-translate-pop-up-buffer-set-focus’ fails to specify type
 ■  Warning (comp): google-translate-core-ui.el:357:12: Warning: defcustom for ‘google-translate-display-translation-phonetic’ fails to specify type
 ■  Warning (comp): google-translate-core-ui.el:411:2: Warning: defvar `google-translate-preferable-input-methods-alist' docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): google-translate-core-ui.el:446:2: Warning: docstring wider than 80 characters
 ■  Warning (comp): google-translate-core-ui.el:797:47: Warning: ‘previous-line’ is for interactive use only; use ‘forward-line’ with negative argument instead.
 ■  Warning (comp): google-translate-core.el:162:2: Warning: docstring wider than 80 characters
 ■  Warning (comp): google-translate-default-ui.el:263:61: Warning: the function ‘pdf-view-active-region-text’ is not known to be defined.
 ■  Warning (comp): google-translate-default-ui.el:303:2: Warning: docstring wider than 80 characters
 ■  Warning (comp): google-translate-default-ui.el:314:25: Warning: the function ‘org-element-at-point’ is not known to be defined.
 ■  Warning (comp): google-translate-default-ui.el:316:18: Warning: the function ‘org-mark-element’ is not known to be defined.
 ■  Warning (comp): google-translate-default-ui.el:337:2: Warning: docstring wider than 80 characters
 ■  Warning (comp): helm-core.el:6651:14: Warning: `inhibit-point-motion-hooks' is an obsolete variable (as of 25.1); use `cursor-intangible-mode' or `cursor-sensor-mode' instead
 ■  Warning (comp): helm-core.el:7239:23: Warning: `special-display-regexps' is an obsolete variable (as of 24.3); use `display-buffer-alist' instead.
 ■  Warning (comp): helm-core.el:7239:47: Warning: `special-display-buffer-names' is an obsolete variable (as of 24.3); use `display-buffer-alist' instead.
 ■  Warning (comp): helm-projectile.el:1014:19: Warning: Unused lexical variable `helm-rg--extra-args'
 ■  Warning (comp): html-mode-expansions.el:38:2: Warning: docstring wider than 80 characters
 ■  Warning (comp): idle-require.el:88:20: Warning: Use keywords rather than deprecated positional arguments to `define-minor-mode'
 ■  Warning (comp): iedit-lib.el:1029:2: Warning: docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): iedit-lib.el:135:2: Warning: defvar `iedit-search-invisible' docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): iedit.el:175:2: Warning: defvar `iedit-default-occurrence-local' docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): iedit.el:537:12: Warning: Case 'regexp will match ‘quote’.  If that’s intended, write (regexp quote) instead.  Otherwise, don’t quote ‘regexp’.
 ■  Warning (comp): iedit.el:537:12: Warning: Case 'symbol will match ‘quote’.  If that’s intended, write (symbol quote) instead.  Otherwise, don’t quote ‘symbol’.
 ■  Warning (comp): iedit.el:537:12: Warning: Case 'word will match ‘quote’.  If that’s intended, write (word quote) instead.  Otherwise, don’t quote ‘word’.
 ■  Warning (comp): irc.el:1198:59: Warning: Unused lexical argument `ignored'
 ■  Warning (comp): irc.el:1496:60: Warning: Unused lexical argument `ignored'
 ■  Warning (comp): irc.el:612:57: Warning: Unused lexical argument `ignored'
 ■  Warning (comp): irc.el:671:13: Warning: assignment to free variable ‘circe-server-inhibit-auto-reconnect-p’
 ■  Warning (comp): irc.el:672:27: Warning: reference to free variable ‘circe-default-quit-message’
 ■  Warning (comp): list-utils.el:1001:2: Warning: docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): list-utils.el:288:2: Warning: docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): lui-irc-colors.el:196:2: Warning: docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): lui-track.el:97:14: Warning: Case 'bar will match ‘quote’.  If that’s intended, write (bar quote) instead.  Otherwise, don’t quote ‘bar’.
 ■  Warning (comp): lui-track.el:97:14: Warning: Case 'fringe will match ‘quote’.  If that’s intended, write (fringe quote) instead.  Otherwise, don’t quote ‘fringe’.
 ■  Warning (comp): lui.el:1184:28: Warning: ‘point-at-bol’ is an obsolete function (as of 29.1); use ‘line-beginning-position’ or ‘pos-bol’ instead.
 ■  Warning (comp): lui.el:1245:21: Warning: ‘point-at-eol’ is an obsolete function (as of 29.1); use ‘line-end-position’ or ‘pos-eol’ instead.
 ■  Warning (comp): lui.el:1293:23: Warning: ‘point-at-eol’ is an obsolete function (as of 29.1); use ‘line-end-position’ or ‘pos-eol’ instead.
 ■  Warning (comp): lui.el:1320:10: Warning: ‘inhibit-point-motion-hooks’ is an obsolete variable (as of 25.1); use ‘cursor-intangible-mode’ or ‘cursor-sensor-mode’ instead
 ■  Warning (comp): lui.el:246:2: Warning: custom-declare-variable `lui-fill-type' docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): lui.el:288:2: Warning: custom-declare-variable `lui-time-stamp-position' docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): lui.el:315:2: Warning: custom-declare-variable `lui-time-stamp-only-when-changed-p' docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): lui.el:694:10: Warning: ‘help-xref-interned’ is an obsolete function (as of 25.1); use ‘describe-symbol’ instead.
 ■  Warning (comp): lui.el:715:16: Warning: ‘point-at-bol’ is an obsolete function (as of 29.1); use ‘line-beginning-position’ or ‘pos-bol’ instead.
 ■  Warning (comp): lui.el:790:2: Warning: docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): lui.el:961:17: Warning: ‘inhibit-point-motion-hooks’ is an obsolete variable (as of 25.1); use ‘cursor-intangible-mode’ or ‘cursor-sensor-mode’ instead
 ■  Warning (comp): nav-flash.el:195:14: Warning: `inhibit-point-motion-hooks' is an obsolete variable (as of 25.1); use `cursor-intangible-mode' or `cursor-sensor-mode' instead
 ■  Warning (comp): nav-flash.el:195:14: Warning: ‘inhibit-point-motion-hooks’ is an obsolete variable (as of 25.1); use ‘cursor-intangible-mode’ or ‘cursor-sensor-mode’ instead
 ■  Warning (comp): pcache.el:116:23: Warning: Unused lexical argument `k'
 ■  Warning (comp): pcache.el:120:38: Warning: Unused lexical argument `cache'
 ■  Warning (comp): pcache.el:143:39: Warning: Unused lexical argument `entry'
 ■  Warning (comp): pcache.el:229:21: Warning: Unused lexical argument `k'
 ■  Warning (comp): pcache.el:76:45: Warning: Ambiguous initform needs quoting: pcache-entry
 ■  Warning (comp): pcache.el:80:34: Warning: Unknown slot ‘:save-delay’
 ■  Warning (comp): popup.el:120:12: Warning: Unused lexical variable `kinsoku-limit'
 ■  Warning (comp): popup.el:1211:29: Warning: Unused lexical argument `event'
 ■  Warning (comp): popup.el:1211:35: Warning: Unused lexical argument `default'
 ■  Warning (comp): popup.el:1359:34: Warning: Unused lexical variable `event'
 ■  Warning (comp): popup.el:543:13: Warning: Unused lexical variable `window-start'
 ■  Warning (comp): popup.el:682:21: Warning: Unused lexical variable `i'
 ■  Warning (comp): popup.el:690:20: Warning: Unused lexical variable `olddisplay'
 ■  Warning (comp): popup.el:862:13: Warning: Unused lexical variable `counter'
 ■  Warning (comp): popup.el:868:13: Warning: Unused lexical variable `counter'
 ■  Warning (comp): popup.el:982:10: Warning: Unused lexical variable `list'
 ■  Warning (comp): projectile.el:6232:19: Warning: assignment to free variable `savehist-additional-variables'
 ■  Warning (comp): projectile.el:6232:19: Warning: assignment to free variable ‘savehist-additional-variables’
 ■  Warning (comp): projectile.el:6232:19: Warning: reference to free variable `savehist-additional-variables'
 ■  Warning (comp): projectile.el:6232:19: Warning: reference to free variable ‘savehist-additional-variables’
 ■  Warning (comp): smartparens.el: Warning: avoid `lsh'; use `ash' instead
 ■  Warning (comp): smartparens.el:1880:39: Warning: avoid `lsh'; use `ash' instead
 ■  Warning (comp): smartparens.el:1882:39: Warning: avoid `lsh'; use `ash' instead
 ■  Warning (comp): smartparens.el:1884:39: Warning: avoid `lsh'; use `ash' instead
 ■  Warning (comp): smartparens.el:1886:39: Warning: avoid `lsh'; use `ash' instead
 ■  Warning (comp): smartparens.el:2756:22: Warning: value returned from (< (sp--get-overlay-length nil) (sp--get-overlay-length nil)) is unused
 ■  Warning (comp): smartparens.el:2838:37: Warning: Unused lexical argument `ignored'
 ■  Warning (comp): smartparens.el:3333:49: Warning: Unused lexical argument `ignored'
 ■  Warning (comp): smartparens.el:3752:2: Warning: docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): smartparens.el:4422:43: Warning: avoid `lsh'; use `ash' instead
 ■  Warning (comp): smartparens.el:4425:43: Warning: avoid `lsh'; use `ash' instead
 ■  Warning (comp): smartparens.el:7883:2: Warning: docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): smartparens.el:9268:34: Warning: `point-at-eol' is an obsolete function (as of 29.1); use `line-end-position' or `pos-eol' instead.
 ■  Warning (comp): smartrep.el:110:4: Warning: `destructuring-bind' is an obsolete alias (as of 27.1); use `cl-destructuring-bind' instead.
 ■  Warning (comp): smartrep.el:110:4: Warning: ‘destructuring-bind’ is an obsolete alias (as of 27.1); use ‘cl-destructuring-bind’ instead.
 ■  Warning (comp): smartrep.el:184:4: Warning: `loop' is an obsolete alias (as of 27.1); use `cl-loop' instead.
 ■  Warning (comp): smartrep.el:184:4: Warning: ‘loop’ is an obsolete alias (as of 27.1); use ‘cl-loop’ instead.
 ■  Warning (comp): smartrep.el:47:2: Warning: *Package cl is deprecated*
 ■  Warning (comp): smartrep.el:47:2: Warning: Package cl is deprecated
 ■  Warning (comp): tex-site.el:138:31: Warning: the function `BibTeX-auto-store' is not known to be defined.
 ■  Warning (comp): tex-site.el:138:31: Warning: the function ‘BibTeX-auto-store’ is not known to be defined.
 ■  Warning (comp): tracking.el:52:2: Warning: custom-declare-variable `tracking-shorten-modes' docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): tracking.el:71:2: Warning: custom-declare-variable `tracking-position' docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): volatile-highlights.el:388:32: Warning: Unused lexical argument `maparg'
 ■  Warning (comp): volatile-highlights.el:409:10: Warning: Unused lexical variable `fn-on'
 ■  Warning (comp): volatile-highlights.el:410:10: Warning: Unused lexical variable `fn-off'
 ■  Warning (comp): volatile-highlights.el:455:40: Warning: Unused lexical argument `fn-name'
 ■  Warning (comp): volatile-highlights.el:466:41: Warning: Unused lexical argument `fn-name'
 ■  Warning (comp): volatile-highlights.el:517:47: Warning: Unused lexical argument `filename'
 ■  Warning (comp): volatile-highlights.el:518:19: Warning: Unused lexical variable `c'
 ■  Warning (comp): ws-butler.el:151:2: Warning: docstring wider than 80 characters
 ■  Warning (comp): ws-butler.el:186:20: Warning: `point-at-eol' is an obsolete function (as of 29.1); use `line-end-position' or `pos-eol' instead.
 ■  Warning (comp): ws-butler.el:245:28: Warning: `point-at-bol' is an obsolete function (as of 29.1); use `line-beginning-position' or `pos-bol' instead.
 ■  Warning (comp): ws-butler.el:249:28: Warning: `point-at-eol' is an obsolete function (as of 29.1); use `line-end-position' or `pos-eol' instead.
 ■  Warning (comp): ws-butler.el:320:2: Warning: docstring has wrong usage of unescaped single quotes (use \= or different quoting)
 ■  Warning (comp): yasnippet.el:1810:2: Warning: docstring wider than 80 characters
 ■  Warning (comp): yasnippet.el:2982:2: Warning: docstring wider than 80 characters
 ■  Warning (comp): yasnippet.el:3732:4: Warning: `declare' after `interactive'
 ■  Warning (comp): yasnippet.el:4735:2: Warning: docstring wider than 80 characters
 ■  Warning (comp): yasnippet.el:475:2: Warning: defvar `yas-after-exit-snippet-hook' docstring wider than 80 characters
 ■  Warning (comp): yasnippet.el:557:2: Warning: custom-declare-variable `yas-keymap-disable-hook' docstring wider than 80 characters

*** TODO Test and integrate 'leuven-remove-matching-lines-between-buffers'

#+begin_src emacs-lisp
(defun leuven-remove-matching-lines-between-buffers (buffer-a buffer-b)
  "Remove lines from BUFFER-A that match any lines in BUFFER-B."
  (interactive "bBuffer A: \nbBuffer B: ")
  (with-current-buffer buffer-a
    (let ((patterns (with-current-buffer buffer-b
                      (sort (split-string (buffer-string) "\n")))))
      (goto-char (point-min))
      (while (not (eobp))
        (let ((line (buffer-substring (line-beginning-position) (line-end-position))))
          (when (member line patterns)
            (delete-region (line-beginning-position) (line-end-position))
            (beginning-of-line))))
        (forward-line)))))
#+end_src

See delete-matching-lines...

*** TODO Fix error in post-command-hook ('hl-tags-update'): '(void-function sgml-get-context)'

Ouvrir =client-bldgops-cost-report.axvw= au démarrage d'Emacs...

*** TODO Use the Emacs bug hunter tool to track down potential issues

The Bug Hunter https://travis-ci.org/Malabarba/elisp-bug-hunter.svg?branch=master

Automatically debug and bisect your init (=.emacs=) file!

#+begin_src emacs-lisp
(progn (find-file "~/test.java")
       (require 'helm-imenu)
       (helm-imenu)
       nil)
#+end_src

*** TODO Profile Emacs code performance to identify bottlenecks

In case this helps anyone, I've found this code makes profiling a lot
easier.  It automatically instruments the desired functions, runs the
code you want to test, removes the instrumentation, and presents the
results.

#+BEGIN_SRC elisp
  (defmacro profile-org (times &rest body)
    `(let (output)
       (dolist (p '("org-"))            ; Symbol prefixes to instrument.
         (elp-instrument-package p))
       (dotimes (x ,times)
         ,@body)
       (elp-results)
       (elp-restore-all)
       (point-min)
       (forward-line 20)
       (delete-region (point) (point-max))
       (setq output (buffer-substring-no-properties (point-min) (point-max)))
       (kill-buffer)
       (delete-window)
       output))

  ;; Used like this:
  (profile-org 10
    (org-table-next-field)
    (org-table-align))
#+END_SRC

*** TODO Refactor 'setcdr' with 'assoc' constructs

: (setcdr (assoc value alist) new-value)

works pretty well (but you'll probably need to add a not-found check).

In Emacs 25:

: (setf (alist-get key alist) new-value)

even without not-found checking.

*** TODO Improve implementation of time subtraction

#+begin_src emacs-lisp
(let ((time (current-time)))
  (org-id-find "zangwill.nick_2014:aesthetic.judgment")
  (format "%ss" (time-to-seconds (time-subtract (current-time) time))))
#+end_src

** Intégration d’outils externes

*** TODO ripgrep

*** TODO WSL Emacs

- [ ] https://emacsredux.com/blog/2021/12/19/using-emacs-on-windows-11-with-wsl2/
- [ ] https://shelper.github.io/posts/setup-emacs-in-wsl2/#copy-paste-sharing-between-wsl2-and-windows-host
- [ ] https://doc.ubuntu-fr.org/emacs
- [ ] https://emacs.stackexchange.com/questions/59226/emacs-as-editor-under-win10-wsl-2
- [ ] https://github.com/microsoft/wslg/issues/1068
- [ ] https://hkvim.com/post/windows-setup/

** Exploration et documentation

*** TODO Refresh list of recent files (remove files which don't exist anymore)

*** TODO Investigate "Goto last edit location" functionality (explained by L. David Andersson)
[2015-06-24 Wed 18:53]

#+begin_verse
> In fact, there is an easy solution, provided by Kevin Rodgers himself,
> to whom I wrote after you, as I got the same problem with his package.
>
> His solution was to add *one* line in my function that's run before
> saving the buffer:
>
> --8<---------------cut here---------------start------------->8---
>   (defun leuven-org-update-buffer ()
>     "Update all dynamic blocks and all tables in the buffer."
>     (interactive)
>     (when (derived-mode-p 'org-mode)
>       (let ((buffer-undo-list buffer-undo-list)) ; For goto-chg <<<<<<<<<
>         (org-update-all-dblocks)
>         (org-table-iterate-buffer-tables))))
>
>   ;; Make sure that all dynamic blocks and all tables are always
> up-to-date.
>   (add-hook 'before-save-hook 'leuven-org-update-buffer)
> --8<---------------cut here---------------end--------------->8---
>
> And that works perfectly!  Simple (not for me!?) and effective...

Sorry, I think that is wrong. It is more important that code is pretty
than that it works. This only *appears* to work, most of the time.

What it does is, it *forgets* the edits done by the org package when a
file is saved. The info in the buffer-undo-list may not be in sync with
the content of the buffer before a certain time point. The time point is
*not* the save operation and the edits it may do, but the specific edits
before the save, that the save operation restores. I.e. (assuming the save
removes spaces at end of line) the edit by you (or another package) that
inserts the spaces. Undoing beyond those inserts may go wrong.

I have not tried this, but you might want to:

- Make a temporary copy of an .org file, that you don't mind being corrupt.
- Open it in emacs.
- Make a small edit in one line, say type "foo" in line 10.
- Add space at end of line in some line above, say line 5.
- Save the file. (I assume the space at the end of a line will be removed)
- Make a small edit in one line, say type "bar" in line 11.
- Undo (this will undo the edit in line 11)
- Undo again (this will undo the edit in line 10, but in the wrong position)

Did it misbehave as I expect, or did it work perfectly?

Disclaimer

I do not see "delete-trailing-whitespace" in the current clip. Earlier it
was in the save hook and it was that function that did the edits during
the save operation. In my test case I assume it is still present. If it is
no longer present (and the org functions in the hook does not edit
anything) it may work perfectly! (But then, you should have no problem
with goto-chg even without Kevin Rodgers' patch.)

/David Andersson
#+end_verse

From [[gnus:INBOX#57408.213.114.113.54.1435164814.squirrel@alexander.fl-net.se][Email from l. david andersson: Re: Goto last edit location --]]

*** TODO Enhance documentation for navigation and search functions in Emacs

Excellent example:
http://www.jetbrains.com/resharper/features/navigation_search.html

Other:
https://support.rstudio.com/hc/en-us/articles/200710523

*** TODO Automate reporting of style errors
:PROPERTIES:
:header-args: :tangle no
:END:

Report all errors with:

#+begin_src emacs-lisp
(checkdoc-current-buffer t)
#+end_src

- Format the documentation string so that it fits in an Emacs window on an
  80-column screen. It is a good idea for most lines to be no wider than 60
  characters. The first line should not be wider than 67 characters or it will
  look bad in the output of apropos.

  You can fill the text if that looks good. However, rather than blindly filling
  the entire documentation string, you can often make it much more readable by
  choosing certain line breaks with care. Use blank lines between topics if the
  documentation string is long.

- Do not indent subsequent lines of a documentation string so that the text is
  lined up in the source code with the text of the first line. This looks nice
  in the source code, but looks bizarre when users view the documentation.

  Remember that the indentation before the starting double-quote is not part of
  the string!

*** TODO Publish documentation for Emacs-Leuven

Use my Org html theme!

Others did already:
- http://coldnew.github.io/coldnew-emacs/
- http://spacemacs.org/doc/DOCUMENTATION.html

Or put in on RTD:
- http://emacs.readthedocs.io/en/latest/completion_and_selection.html (via =docs=
  subdirectory)

*** TODO Voir infos sur Emacs

- https://emacsconf.org/2021/talks/forever/
- https://www.win.tue.nl/~aeb/linux/misc/emacs.html

*** TODO Explore and evaluate other Emacs configurations

- https://github.com/jamescherti/minimal-emacs.d!!!
- https://alhassy.github.io/init/

*** TODO Check out Emacs key bindings for Atom editor

https://github.com/dvorka/atom-editor-emacs-key-bindings

*** TODO Explore the features and capabilities of IntelliJ IDEA for possible workflow improvements

https://www.jetbrains.com/help/idea/2016.1/intellij-idea-editor.html (bookmarks,
breakpoints, syntax highlighting, code completion, zooming, folding code blocks,
macros, highlighted TODO items, code analysis, intention actions, intelligent
and fast navigation, etc.)

- https://dzone.com/articles/why-idea-better-eclipse
  Auto-complete, debugging, refactoring, how to...

- https://www.catalysts.cc/wissenswertes/intellij-idea-and-eclipse-shortcuts/

** Tasks

- [ ] https://www.jetbrains.com/help/rider/Navigation_and_Search__Navigating_Between_To_do_Items.html
  (Emacs, Dev, TODO Lists)
- [ ] http://www.jetbrains.com/idea/webhelp/highlighting-usages.html (Emacs,
  Dev, Search for usages)
- [ ] http://tincman.wordpress.com/2011/01/04/research-paper-management-with-emacs-org-mode-and-reftex/

* Notes

** Learning GNU Emacs

Yes, there is.  It's called Learning Gnu Emacs and is published by
O'Reilly press.  Worth every cent if you're serious about Emacs.

** Dribble file in Emacs

The precise commands we need to type to reproduce the bug.  If at
all possible, give a full recipe for an Emacs started with the
`-Q' option (*note Initial Options::).  This bypasses your
`.emacs' customizations.

One way to record the input to Emacs precisely is to write a
dribble file.  To start the file, execute the Lisp expression

     (open-dribble-file "~/dribble")

using `M-:' or from the `*scratch*' buffer just after starting
Emacs.  From then on, Emacs copies all your input to the specified
dribble file until the Emacs process is killed.

** Why Emacs?

Personally, my first love with Emacs was when someone showed =M-q= to me
and the most uglily indented text aligned nicely between the margins.

** Emacs replace by upcase version

You can force a matched regex text pattern to upper case by entering
=C-M-% your_regexp RET \,(upcase \num_of_match)=.

** A better Java mode for Emacs

https://github.com/espenhw/malabar-mode

** Gnu.emacs.bug: Always reply by email! (from Glenn Morris)              :mail:
[2013-01-27 Sun 20:54]

#+begin_verse
I'm not sure what S W does; but basically always reply by mail, never by
usenet. Thanks!
#+end_verse

From [[http://groups.google.com/groups/search?as_umsgid%3Dmailman.18446.1359316485.855.bug-gnu-emacs%2540gnu.org][Email from Glenn Morris: bug#13546: 24.2.92; Error(s) w]]

** Execute R, LaTeX, JavaScript, etc. online!

See http://www.compileonline.com/.

Even with the Emacs editor!!

** Colors (Emacs theme)

http://www.colorhexa.com/

** How do I use emacsclient to connect to a remote emacs instance?

https://emacs.stackexchange.com/questions/371/how-do-i-use-emacsclient-to-connect-to-a-remote-emacs-instance

- SSH port forwarding
- TRAMP* Design

- http://www.slideshare.net/UserStudio/1-facture-6-heures-2-cocas-1-visualisation-11204436
